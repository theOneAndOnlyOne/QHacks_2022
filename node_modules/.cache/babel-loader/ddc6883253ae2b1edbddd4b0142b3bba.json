{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";import _inheritsLoose from\"@babel/runtime/helpers/esm/inheritsLoose\";import React from'react';import ReactDOM from'react-dom';import config from'./config';import{timeoutsShape}from'./utils/PropTypes';import TransitionGroupContext from'./TransitionGroupContext';export var UNMOUNTED='unmounted';export var EXITED='exited';export var ENTERING='entering';export var ENTERED='entered';export var EXITING='exiting';/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */var Transition=/*#__PURE__*/function(_React$Component){_inheritsLoose(Transition,_React$Component);function Transition(props,context){var _this;_this=_React$Component.call(this,props,context)||this;var parentGroup=context;// In the context of a TransitionGroup all enters are really appears\nvar appear=parentGroup&&!parentGroup.isMounting?props.enter:props.appear;var initialStatus;_this.appearStatus=null;if(props.in){if(appear){initialStatus=EXITED;_this.appearStatus=ENTERING;}else{initialStatus=ENTERED;}}else{if(props.unmountOnExit||props.mountOnEnter){initialStatus=UNMOUNTED;}else{initialStatus=EXITED;}}_this.state={status:initialStatus};_this.nextCallback=null;return _this;}Transition.getDerivedStateFromProps=function getDerivedStateFromProps(_ref,prevState){var nextIn=_ref.in;if(nextIn&&prevState.status===UNMOUNTED){return{status:EXITED};}return null;}// getSnapshotBeforeUpdate(prevProps) {\n//   let nextStatus = null\n//   if (prevProps !== this.props) {\n//     const { status } = this.state\n//     if (this.props.in) {\n//       if (status !== ENTERING && status !== ENTERED) {\n//         nextStatus = ENTERING\n//       }\n//     } else {\n//       if (status === ENTERING || status === ENTERED) {\n//         nextStatus = EXITING\n//       }\n//     }\n//   }\n//   return { nextStatus }\n// }\n;var _proto=Transition.prototype;_proto.componentDidMount=function componentDidMount(){this.updateStatus(true,this.appearStatus);};_proto.componentDidUpdate=function componentDidUpdate(prevProps){var nextStatus=null;if(prevProps!==this.props){var status=this.state.status;if(this.props.in){if(status!==ENTERING&&status!==ENTERED){nextStatus=ENTERING;}}else{if(status===ENTERING||status===ENTERED){nextStatus=EXITING;}}}this.updateStatus(false,nextStatus);};_proto.componentWillUnmount=function componentWillUnmount(){this.cancelNextCallback();};_proto.getTimeouts=function getTimeouts(){var timeout=this.props.timeout;var exit,enter,appear;exit=enter=appear=timeout;if(timeout!=null&&typeof timeout!=='number'){exit=timeout.exit;enter=timeout.enter;// TODO: remove fallback for next major\nappear=timeout.appear!==undefined?timeout.appear:enter;}return{exit:exit,enter:enter,appear:appear};};_proto.updateStatus=function updateStatus(mounting,nextStatus){if(mounting===void 0){mounting=false;}if(nextStatus!==null){// nextStatus will always be ENTERING or EXITING.\nthis.cancelNextCallback();if(nextStatus===ENTERING){this.performEnter(mounting);}else{this.performExit();}}else if(this.props.unmountOnExit&&this.state.status===EXITED){this.setState({status:UNMOUNTED});}};_proto.performEnter=function performEnter(mounting){var _this2=this;var enter=this.props.enter;var appearing=this.context?this.context.isMounting:mounting;var _ref2=this.props.nodeRef?[appearing]:[ReactDOM.findDOMNode(this),appearing],maybeNode=_ref2[0],maybeAppearing=_ref2[1];var timeouts=this.getTimeouts();var enterTimeout=appearing?timeouts.appear:timeouts.enter;// no enter animation skip right to ENTERED\n// if we are mounting and running this it means appear _must_ be set\nif(!mounting&&!enter||config.disabled){this.safeSetState({status:ENTERED},function(){_this2.props.onEntered(maybeNode);});return;}this.props.onEnter(maybeNode,maybeAppearing);this.safeSetState({status:ENTERING},function(){_this2.props.onEntering(maybeNode,maybeAppearing);_this2.onTransitionEnd(enterTimeout,function(){_this2.safeSetState({status:ENTERED},function(){_this2.props.onEntered(maybeNode,maybeAppearing);});});});};_proto.performExit=function performExit(){var _this3=this;var exit=this.props.exit;var timeouts=this.getTimeouts();var maybeNode=this.props.nodeRef?undefined:ReactDOM.findDOMNode(this);// no exit animation skip right to EXITED\nif(!exit||config.disabled){this.safeSetState({status:EXITED},function(){_this3.props.onExited(maybeNode);});return;}this.props.onExit(maybeNode);this.safeSetState({status:EXITING},function(){_this3.props.onExiting(maybeNode);_this3.onTransitionEnd(timeouts.exit,function(){_this3.safeSetState({status:EXITED},function(){_this3.props.onExited(maybeNode);});});});};_proto.cancelNextCallback=function cancelNextCallback(){if(this.nextCallback!==null){this.nextCallback.cancel();this.nextCallback=null;}};_proto.safeSetState=function safeSetState(nextState,callback){// This shouldn't be necessary, but there are weird race conditions with\n// setState callbacks and unmounting in testing, so always make sure that\n// we can cancel any pending setState callbacks after we unmount.\ncallback=this.setNextCallback(callback);this.setState(nextState,callback);};_proto.setNextCallback=function setNextCallback(callback){var _this4=this;var active=true;this.nextCallback=function(event){if(active){active=false;_this4.nextCallback=null;callback(event);}};this.nextCallback.cancel=function(){active=false;};return this.nextCallback;};_proto.onTransitionEnd=function onTransitionEnd(timeout,handler){this.setNextCallback(handler);var node=this.props.nodeRef?this.props.nodeRef.current:ReactDOM.findDOMNode(this);var doesNotHaveTimeoutOrListener=timeout==null&&!this.props.addEndListener;if(!node||doesNotHaveTimeoutOrListener){setTimeout(this.nextCallback,0);return;}if(this.props.addEndListener){var _ref3=this.props.nodeRef?[this.nextCallback]:[node,this.nextCallback],maybeNode=_ref3[0],maybeNextCallback=_ref3[1];this.props.addEndListener(maybeNode,maybeNextCallback);}if(timeout!=null){setTimeout(this.nextCallback,timeout);}};_proto.render=function render(){var status=this.state.status;if(status===UNMOUNTED){return null;}var _this$props=this.props,children=_this$props.children,_in=_this$props.in,_mountOnEnter=_this$props.mountOnEnter,_unmountOnExit=_this$props.unmountOnExit,_appear=_this$props.appear,_enter=_this$props.enter,_exit=_this$props.exit,_timeout=_this$props.timeout,_addEndListener=_this$props.addEndListener,_onEnter=_this$props.onEnter,_onEntering=_this$props.onEntering,_onEntered=_this$props.onEntered,_onExit=_this$props.onExit,_onExiting=_this$props.onExiting,_onExited=_this$props.onExited,_nodeRef=_this$props.nodeRef,childProps=_objectWithoutPropertiesLoose(_this$props,[\"children\",\"in\",\"mountOnEnter\",\"unmountOnExit\",\"appear\",\"enter\",\"exit\",\"timeout\",\"addEndListener\",\"onEnter\",\"onEntering\",\"onEntered\",\"onExit\",\"onExiting\",\"onExited\",\"nodeRef\"]);return/*#__PURE__*/ (// allows for nested Transitions\nReact.createElement(TransitionGroupContext.Provider,{value:null},typeof children==='function'?children(status,childProps):/*#__PURE__*/React.cloneElement(React.Children.only(children),childProps)));};return Transition;}(React.Component);Transition.contextType=TransitionGroupContext;// Name the function so it is clearer in the documentation\nfunction noop(){}Transition.defaultProps={in:false,mountOnEnter:false,unmountOnExit:false,appear:false,enter:true,exit:true,onEnter:noop,onEntering:noop,onEntered:noop,onExit:noop,onExiting:noop,onExited:noop};Transition.UNMOUNTED=UNMOUNTED;Transition.EXITED=EXITED;Transition.ENTERING=ENTERING;Transition.ENTERED=ENTERED;Transition.EXITING=EXITING;export default Transition;","map":{"version":3,"sources":["C:/Users/joshu/Test/src/node_modules/react-transition-group/esm/Transition.js"],"names":["_objectWithoutPropertiesLoose","_inheritsLoose","React","ReactDOM","config","timeoutsShape","TransitionGroupContext","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","call","parentGroup","appear","isMounting","enter","initialStatus","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","nextIn","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","exit","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","disabled","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExited","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","node","current","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","_ref3","maybeNextCallback","render","_this$props","children","_in","_mountOnEnter","_unmountOnExit","_appear","_enter","_exit","_timeout","_addEndListener","_onEnter","_onEntering","_onEntered","_onExit","_onExiting","_onExited","_nodeRef","childProps","createElement","Provider","value","cloneElement","Children","only","Component","contextType","noop","defaultProps"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;"]},"metadata":{},"sourceType":"module"}