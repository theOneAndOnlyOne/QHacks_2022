{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";import _extends from\"@babel/runtime/helpers/esm/extends\";import _assertThisInitialized from\"@babel/runtime/helpers/esm/assertThisInitialized\";import _inheritsLoose from\"@babel/runtime/helpers/esm/inheritsLoose\";import React from'react';import TransitionGroupContext from'./TransitionGroupContext';import{getChildMapping,getInitialChildMapping,getNextChildMapping}from'./utils/ChildMapping';var values=Object.values||function(obj){return Object.keys(obj).map(function(k){return obj[k];});};var defaultProps={component:'div',childFactory:function childFactory(child){return child;}};/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */var TransitionGroup=/*#__PURE__*/function(_React$Component){_inheritsLoose(TransitionGroup,_React$Component);function TransitionGroup(props,context){var _this;_this=_React$Component.call(this,props,context)||this;var handleExited=_this.handleExited.bind(_assertThisInitialized(_this));// Initial children should all be entering, dependent on appear\n_this.state={contextValue:{isMounting:true},handleExited:handleExited,firstRender:true};return _this;}var _proto=TransitionGroup.prototype;_proto.componentDidMount=function componentDidMount(){this.mounted=true;this.setState({contextValue:{isMounting:false}});};_proto.componentWillUnmount=function componentWillUnmount(){this.mounted=false;};TransitionGroup.getDerivedStateFromProps=function getDerivedStateFromProps(nextProps,_ref){var prevChildMapping=_ref.children,handleExited=_ref.handleExited,firstRender=_ref.firstRender;return{children:firstRender?getInitialChildMapping(nextProps,handleExited):getNextChildMapping(nextProps,prevChildMapping,handleExited),firstRender:false};}// node is `undefined` when user provided `nodeRef` prop\n;_proto.handleExited=function handleExited(child,node){var currentChildMapping=getChildMapping(this.props.children);if(child.key in currentChildMapping)return;if(child.props.onExited){child.props.onExited(node);}if(this.mounted){this.setState(function(state){var children=_extends({},state.children);delete children[child.key];return{children:children};});}};_proto.render=function render(){var _this$props=this.props,Component=_this$props.component,childFactory=_this$props.childFactory,props=_objectWithoutPropertiesLoose(_this$props,[\"component\",\"childFactory\"]);var contextValue=this.state.contextValue;var children=values(this.state.children).map(childFactory);delete props.appear;delete props.enter;delete props.exit;if(Component===null){return/*#__PURE__*/React.createElement(TransitionGroupContext.Provider,{value:contextValue},children);}return/*#__PURE__*/React.createElement(TransitionGroupContext.Provider,{value:contextValue},/*#__PURE__*/React.createElement(Component,props,children));};return TransitionGroup;}(React.Component);TransitionGroup.defaultProps=defaultProps;export default TransitionGroup;","map":{"version":3,"sources":["C:/Users/joshu/Test/src/node_modules/react-transition-group/esm/TransitionGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","_assertThisInitialized","_inheritsLoose","React","TransitionGroupContext","getChildMapping","getInitialChildMapping","getNextChildMapping","values","Object","obj","keys","map","k","defaultProps","component","childFactory","child","TransitionGroup","_React$Component","props","context","_this","call","handleExited","bind","state","contextValue","isMounting","firstRender","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","nextProps","_ref","prevChildMapping","children","node","currentChildMapping","key","onExited","render","_this$props","Component","appear","enter","exit","createElement","Provider","value"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;"]},"metadata":{},"sourceType":"module"}