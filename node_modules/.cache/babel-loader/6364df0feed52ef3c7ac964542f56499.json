{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */'use strict';var ReactPropTypesSecret=require('./lib/ReactPropTypesSecret');function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction;module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret===ReactPropTypesSecret){// It is still safe when called from React.\nreturn;}var err=new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. '+'Use PropTypes.checkPropTypes() to call them. '+'Read more at http://fb.me/use-check-prop-types');err.name='Invariant Violation';throw err;};shim.isRequired=shim;function getShim(){return shim;};// Important!\n// Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\nvar ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};ReactPropTypes.PropTypes=ReactPropTypes;return ReactPropTypes;};","map":{"version":3,"sources":["C:/Users/joshu/Test/src/node_modules/prop-types/factoryWithThrowingShims.js"],"names":["ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","isRequired","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GAEA,aAEA,GAAIA,CAAAA,oBAAoB,CAAGC,OAAO,CAAC,4BAAD,CAAlC,CAEA,QAASC,CAAAA,aAAT,EAAyB,CAAE,CAC3B,QAASC,CAAAA,sBAAT,EAAkC,CAAE,CACpCA,sBAAsB,CAACC,iBAAvB,CAA2CF,aAA3C,CAEAG,MAAM,CAACC,OAAP,CAAiB,UAAW,CAC1B,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqBC,QAArB,CAA+BC,aAA/B,CAA8CC,QAA9C,CAAwDC,YAAxD,CAAsEC,MAAtE,CAA8E,CAC5E,GAAIA,MAAM,GAAKb,oBAAf,CAAqC,CACnC;AACA,OACD,CACD,GAAIc,CAAAA,GAAG,CAAG,GAAIC,CAAAA,KAAJ,CACR,uFACA,+CADA,CAEA,gDAHQ,CAAV,CAKAD,GAAG,CAACE,IAAJ,CAAW,qBAAX,CACA,KAAMF,CAAAA,GAAN,CACD,EACDP,IAAI,CAACU,UAAL,CAAkBV,IAAlB,CACA,QAASW,CAAAA,OAAT,EAAmB,CACjB,MAAOX,CAAAA,IAAP,CACD,EACD;AACA;AACA,GAAIY,CAAAA,cAAc,CAAG,CACnBC,KAAK,CAAEb,IADY,CAEnBc,MAAM,CAAEd,IAFW,CAGnBe,IAAI,CAAEf,IAHa,CAInBgB,IAAI,CAAEhB,IAJa,CAKnBiB,MAAM,CAAEjB,IALW,CAMnBkB,MAAM,CAAElB,IANW,CAOnBmB,MAAM,CAAEnB,IAPW,CAQnBoB,MAAM,CAAEpB,IARW,CAUnBqB,GAAG,CAAErB,IAVc,CAWnBsB,OAAO,CAAEX,OAXU,CAYnBY,OAAO,CAAEvB,IAZU,CAanBwB,WAAW,CAAExB,IAbM,CAcnByB,UAAU,CAAEd,OAdO,CAenBe,IAAI,CAAE1B,IAfa,CAgBnB2B,QAAQ,CAAEhB,OAhBS,CAiBnBiB,KAAK,CAAEjB,OAjBY,CAkBnBkB,SAAS,CAAElB,OAlBQ,CAmBnBmB,KAAK,CAAEnB,OAnBY,CAoBnBoB,KAAK,CAAEpB,OApBY,CAsBnBqB,cAAc,CAAEpC,sBAtBG,CAuBnBC,iBAAiB,CAAEF,aAvBA,CAArB,CA0BAiB,cAAc,CAACqB,SAAf,CAA2BrB,cAA3B,CAEA,MAAOA,CAAAA,cAAP,CACD,CAjDD","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n"]},"metadata":{},"sourceType":"module"}