{"ast":null,"code":"import _inheritsLoose from\"@babel/runtime/helpers/esm/inheritsLoose\";var _leaveRenders,_enterRenders;import React from'react';import{ENTERED,ENTERING,EXITING}from'./Transition';import TransitionGroupContext from'./TransitionGroupContext';function areChildrenDifferent(oldChildren,newChildren){if(oldChildren===newChildren)return false;if(/*#__PURE__*/React.isValidElement(oldChildren)&&/*#__PURE__*/React.isValidElement(newChildren)&&oldChildren.key!=null&&oldChildren.key===newChildren.key){return false;}return true;}/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */export var modes={out:'out-in',in:'in-out'};var callHook=function callHook(element,name,cb){return function(){var _element$props;element.props[name]&&(_element$props=element.props)[name].apply(_element$props,arguments);cb();};};var leaveRenders=(_leaveRenders={},_leaveRenders[modes.out]=function(_ref){var current=_ref.current,changeState=_ref.changeState;return/*#__PURE__*/React.cloneElement(current,{in:false,onExited:callHook(current,'onExited',function(){changeState(ENTERING,null);})});},_leaveRenders[modes.in]=function(_ref2){var current=_ref2.current,changeState=_ref2.changeState,children=_ref2.children;return[current,/*#__PURE__*/React.cloneElement(children,{in:true,onEntered:callHook(children,'onEntered',function(){changeState(ENTERING);})})];},_leaveRenders);var enterRenders=(_enterRenders={},_enterRenders[modes.out]=function(_ref3){var children=_ref3.children,changeState=_ref3.changeState;return/*#__PURE__*/React.cloneElement(children,{in:true,onEntered:callHook(children,'onEntered',function(){changeState(ENTERED,/*#__PURE__*/React.cloneElement(children,{in:true}));})});},_enterRenders[modes.in]=function(_ref4){var current=_ref4.current,children=_ref4.children,changeState=_ref4.changeState;return[/*#__PURE__*/React.cloneElement(current,{in:false,onExited:callHook(current,'onExited',function(){changeState(ENTERED,/*#__PURE__*/React.cloneElement(children,{in:true}));})}),/*#__PURE__*/React.cloneElement(children,{in:true})];},_enterRenders);/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */var SwitchTransition=/*#__PURE__*/function(_React$Component){_inheritsLoose(SwitchTransition,_React$Component);function SwitchTransition(){var _this;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this;_this.state={status:ENTERED,current:null};_this.appeared=false;_this.changeState=function(status,current){if(current===void 0){current=_this.state.current;}_this.setState({status:status,current:current});};return _this;}var _proto=SwitchTransition.prototype;_proto.componentDidMount=function componentDidMount(){this.appeared=true;};SwitchTransition.getDerivedStateFromProps=function getDerivedStateFromProps(props,state){if(props.children==null){return{current:null};}if(state.status===ENTERING&&props.mode===modes.in){return{status:ENTERING};}if(state.current&&areChildrenDifferent(state.current,props.children)){return{status:EXITING};}return{current:/*#__PURE__*/React.cloneElement(props.children,{in:true})};};_proto.render=function render(){var _this$props=this.props,children=_this$props.children,mode=_this$props.mode,_this$state=this.state,status=_this$state.status,current=_this$state.current;var data={children:children,current:current,changeState:this.changeState,status:status};var component;switch(status){case ENTERING:component=enterRenders[mode](data);break;case EXITING:component=leaveRenders[mode](data);break;case ENTERED:component=current;}return/*#__PURE__*/React.createElement(TransitionGroupContext.Provider,{value:{isMounting:!this.appeared}},component);};return SwitchTransition;}(React.Component);SwitchTransition.defaultProps={mode:modes.out};export default SwitchTransition;","map":{"version":3,"sources":["C:/Users/joshu/Test/src/node_modules/react-transition-group/esm/SwitchTransition.js"],"names":["_inheritsLoose","_leaveRenders","_enterRenders","React","ENTERED","ENTERING","EXITING","TransitionGroupContext","areChildrenDifferent","oldChildren","newChildren","isValidElement","key","modes","out","in","callHook","element","name","cb","_element$props","props","apply","arguments","leaveRenders","_ref","current","changeState","cloneElement","onExited","_ref2","children","onEntered","enterRenders","_ref3","_ref4","SwitchTransition","_React$Component","_this","_len","length","args","Array","_key","call","concat","state","status","appeared","setState","_proto","prototype","componentDidMount","getDerivedStateFromProps","mode","render","_this$props","_this$state","data","component","createElement","Provider","value","isMounting","Component","defaultProps"],"mappings":"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","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _leaveRenders, _enterRenders;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTERED, ENTERING, EXITING } from './Transition';\nimport TransitionGroupContext from './TransitionGroupContext';\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nexport var modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), React.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === ENTERING && props.mode === modes.in) {\n      return {\n        status: ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: EXITING\n      };\n    }\n\n    return {\n      current: React.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(React.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: PropTypes.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nexport default SwitchTransition;"]},"metadata":{},"sourceType":"module"}