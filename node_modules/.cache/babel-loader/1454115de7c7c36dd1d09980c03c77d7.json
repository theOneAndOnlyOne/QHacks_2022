{"ast":null,"code":"function replaceClassName(origClass,classToRemove){return origClass.replace(new RegExp(\"(^|\\\\s)\"+classToRemove+\"(?:\\\\s|$)\",'g'),'$1').replace(/\\s+/g,' ').replace(/^\\s*|\\s*$/g,'');}/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */export default function removeClass(element,className){if(element.classList){element.classList.remove(className);}else if(typeof element.className==='string'){element.className=replaceClassName(element.className,className);}else{element.setAttribute('class',replaceClassName(element.className&&element.className.baseVal||'',className));}}","map":{"version":3,"sources":["C:/Users/joshu/Test/src/node_modules/dom-helpers/esm/removeClass.js"],"names":["replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","element","className","classList","remove","setAttribute","baseVal"],"mappings":"AAAA,QAASA,CAAAA,gBAAT,CAA0BC,SAA1B,CAAqCC,aAArC,CAAoD,CAClD,MAAOD,CAAAA,SAAS,CAACE,OAAV,CAAkB,GAAIC,CAAAA,MAAJ,CAAW,UAAYF,aAAZ,CAA4B,WAAvC,CAAoD,GAApD,CAAlB,CAA4E,IAA5E,EAAkFC,OAAlF,CAA0F,MAA1F,CAAkG,GAAlG,EAAuGA,OAAvG,CAA+G,YAA/G,CAA6H,EAA7H,CAAP,CACD,CACD;AACA;AACA;AACA;AACA;AACA,GAGA,cAAe,SAASE,CAAAA,WAAT,CAAqBC,OAArB,CAA8BC,SAA9B,CAAyC,CACtD,GAAID,OAAO,CAACE,SAAZ,CAAuB,CACrBF,OAAO,CAACE,SAAR,CAAkBC,MAAlB,CAAyBF,SAAzB,EACD,CAFD,IAEO,IAAI,MAAOD,CAAAA,OAAO,CAACC,SAAf,GAA6B,QAAjC,CAA2C,CAChDD,OAAO,CAACC,SAAR,CAAoBP,gBAAgB,CAACM,OAAO,CAACC,SAAT,CAAoBA,SAApB,CAApC,CACD,CAFM,IAEA,CACLD,OAAO,CAACI,YAAR,CAAqB,OAArB,CAA8BV,gBAAgB,CAACM,OAAO,CAACC,SAAR,EAAqBD,OAAO,CAACC,SAAR,CAAkBI,OAAvC,EAAkD,EAAnD,CAAuDJ,SAAvD,CAA9C,EACD,CACF","sourcesContent":["function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}"]},"metadata":{},"sourceType":"module"}